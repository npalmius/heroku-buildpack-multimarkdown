#!/usr/bin/env bash

set -eo pipefail

BIN_DIR=$(cd $(dirname $0); pwd)

# Load some convenience functions like status(), echo(), and indent()
source $BIN_DIR/common.sh

echo "-----> Found an index.md"
echo "-----> Markdown to HTML"
echo "-----> Downloading MultiMarkdown-4"

mkdir -p $2
mkdir -p $2/MultiMarkdown-4
curl https://github.com/fletcher/MultiMarkdown-4/archive/master.tar.gz -sL -o - | tar xzf - --strip 1 -C $2/MultiMarkdown-4
mkdir -p $2/MultiMarkdown-4/greg
curl https://github.com/nddrylliog/greg/archive/master.tar.gz -sL -o - | tar xzf - --strip 1 -C $2/MultiMarkdown-4/greg

echo "-----> Building MultiMarkdown-4"

make -C $2/MultiMarkdown-4/ 2>&1 | indent

echo "-----> Generating HTML files"

MARKDOWN_FILES=`find $1 -name "*.md"`

for f in $MARKDOWN_FILES; do
  NEWFILE=${f%.*}.html
  echo "       ${f#$1} -> ${NEWFILE#$1}"
  if [ ! -f $NEWFILE ]; then
    echo -e "<html>" > $NEWFILE
    echo -e "<head>" >> $NEWFILE
    HEADFILE=$(dirname $f)/_head.html
    if [ -f $HEADFILE ]; then
      echo "         using header ${HEADFILE#$1}"
      cat $HEADFILE >> $NEWFILE
    fi
    echo -e "</head>" >> $NEWFILE
    echo -e "<body>" >> $NEWFILE
    BODYHEADERFILE=$(dirname $f)/_body_header.html
    if [ -f $BODYHEADERFILE ]; then
      echo "         using body header ${BODYHEADERFILE#$1}"
      cat $BODYHEADERFILE >> $NEWFILE
    fi
    $2/MultiMarkdown-4/multimarkdown $f >> $NEWFILE
    BODYFOOTERFILE=$(dirname $f)/_body_footer.html
    if [ -f $BODYFOOTERFILE ]; then
      echo "         using body footer ${BODYFOOTERFILE#$1}"
      cat $BODYFOOTERFILE >> $NEWFILE
    fi
    echo -e "</body>" >> $NEWFILE
    echo -e "</html>" >> $NEWFILE
  else
    echo "         skipping due to ${NEWFILE#$1} already existing."
  fi
  rm $f
done

echo "-----> Using $(python3 --version 2>&1)"
